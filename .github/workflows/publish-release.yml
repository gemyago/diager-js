name: Publish Release

on:
  workflow_call:
    inputs:
      version:
        description: 'The version to publish (e.g., v1.0.0)'
        required: true
        type: string
      pr_number:
        description: 'The PR number that triggered the release'
        required: false
        type: string

# Add permissions at workflow level with all necessary scopes
permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: write
  statuses: write

jobs:
  publish-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate bot app token
        id: bot-app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          npm ci -ws --include-workspace-root

      - name: Build all packages
        run: |
          make dist

      - name: Configure npm for npm registry
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Publish packages to npm registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Publishing packages to npm registry..."
          make publish

      - name: Publish GitHub release
        env:
          GH_TOKEN: ${{ steps.bot-app-token.outputs.token }}
        run: |
          echo "Publishing draft release ${{ inputs.version }}"
          
          # Update the release to remove draft status
          gh release edit "${{ inputs.version }}" --draft=false
          
          echo "Successfully published release ${{ inputs.version }}"

      - name: Add release comment to PR
        if: inputs.pr_number != ''
        env:
          GH_TOKEN: ${{ steps.bot-app-token.outputs.token }}
        run: |
          RELEASE_URL=$(gh release view "${{ inputs.version }}" --json url --jq '.url')
          gh pr comment ${{ inputs.pr_number }} --body "ðŸš€ Release published: $RELEASE_URL"
